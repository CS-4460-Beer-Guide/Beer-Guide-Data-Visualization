<!DOCTYPE html>
<meta charset="utf-8">
<style>

.node circle {
  fill: #fff;
  stroke: steelblue;
  stroke-width: 1.5px;
}

.node {
  font: 10px sans-serif;
}

.link {
  fill: none;
  stroke: #ccc;
  stroke-width: 1.5px;
}

 div.d3tooltip {
      position: absolute;
      text-align: center;
      height: 10px;
      padding: 8px;
      font: 10px sans-serif;
      background: #ffff99;
      border: solid 1px #aaa;
      border-radius: 8px;
      pointer-events: none;
      z-index:10000;
  }

</style>
<body>

<script>
var div = d3.select("body").append("div")
          .attr("class", "d3tooltip")
          .style("opacity", 1e-6);
function mouseover() {
    div.transition()
    .duration(300)
    .style("opacity", 1);
}

function mousemove(d) {
    div
    .text("Info about " + d.description)
    .style("left", (d3.event.pageX +10) + "px")
    .style("top", (d3.event.pageY) + "px");
}

function mouseout() {
    div.transition()
    .duration(300)
    .style("opacity", 1e-6);
}
            
function render_tree() {

            
	var diameter = 960;
	
	var tree = d3.layout.tree()
	    .size([360, diameter / 2 - 120])
	    .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });
	
	var diagonal = d3.svg.diagonal.radial()
	    .projection(function(d) { return [d.y, d.x / 180 * Math.PI]; });
	
	var svg = d3.select("body").append("svg")
	    .attr("width", 1000)
	    .attr("height", 1000)
	    .attr("class", "beer_tree")
	  .append("g")
	    .attr("transform", "translate(" + diameter / 2 + "," + diameter / 2 + ")");
	
	d3.json("beers.json", function(root) {
	  var nodes = tree.nodes(root),
	      links = tree.links(nodes);
	
	  var link = svg.selectAll(".link")
	      .data(links)
	    .enter().append("path")
	      .attr("class", "link")
	      .attr("d", diagonal);
	
	  var node = svg.selectAll(".node")
	      .data(nodes)
	    .enter().append("g")
	      .attr("class", "node")
	      .attr("transform", function(d) { return "rotate(" + (d.x - 90) + ")translate(" + d.y + ")"; })
	
	  node.append("circle")
	      .attr("r", 4.5);
		node.attr("class", function(d) { return d.type + ' node';})
	  node.append("text")
	      .attr("dy", ".31em")
	      .attr("text-anchor", function(d) { return d.x < 180 ? "start" : "end"; })
	      .attr("transform", function(d) { return d.x < 180 ? "translate(8)" : "rotate(180)translate(-8)"; })
	      .attr("class", function(d) { return "node_label tooltip " + d.type;})
	      .attr("data-beer-type", function(d) { return d.type;})
	      .text(function(d) { return d.name; })
        .on("mouseover", mouseover)
        .on("mousemove", function(d){mousemove(d);})
        .on("mouseout", mouseout);
	});
	
	d3.select(self.frameElement).style("height", diameter - 150 + "px");
}


</script>
<script>
	// special thanks for svg traversing to Todd Motto
	// code modified from http://toddmotto.com/hacking-svg-traversing-with-ease-addclass-removeclass-toggleclass-functions/
	function node_has_class(node, className) {
		return new RegExp('(\\s|^)' + className + '(\\s|$)').test(node.getAttribute('class'));
	}
	
	function node_add_class(node, className) {
	  if (!node_has_class(node, className)) {
    	node.setAttribute('class', node.getAttribute('class') + ' ' + className);
    	BeerCharts.add_beers_series($(node).data("beer-type"), $(node).text());
  	}
		
	}
	
	function node_remove_class(node, className) {
	  var removedClass = node.getAttribute('class').replace(new RegExp('(\\s|^)' + className + '(\\s|$)', 'g'), '$2');
	  if (node_has_class(node, className)) {
	    node.setAttribute('class', removedClass);
	    BeerCharts.remove_beers_series($(node).text());
	  }
	}
	
	function node_toggle_class(node, className) {
	 if (node_has_class(node, className)) {
	    node_remove_class(node, className);
	  } else {
	    node_add_class(node, className);
	  }
	}
</script>
<script>


	//node_toggle_class($( "g.node text:contains('" + series_name + "')")[0], "selected")
	$( document ).ready(function() {
		render_tree();
		$(document).on('click','.node_label', function(event) { 
			node_toggle_class(this,"selected");
				//$(this).toggleClass("selected");
				//alert($(this).text());
		});
    BeerCharts.render_scatter_plot();
    // add all beers initially and mark as selected on tree
    //BeerCharts.add_beers_series();
    setTimeout(function(){ node_toggle_class($(".node_label.all_beer")[0], "selected"); }, 1000);
    
});
</script>
<div id="scatter_plot" style="display:inline-block; vertical-align:top;">chart goes here</div>
